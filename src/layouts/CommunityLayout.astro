---
import type { CollectionEntry } from "astro:content";
import { getLibraryLink, removeLocaleAndExtension } from "../pages/_utils";
import BaseLayout from "./BaseLayout.astro";
import LinkButton from "@components/LinkButton/index.astro";
import { Image } from "astro:assets";
import { getCurrentLocale, useTranslations } from "@i18n/utils";
import {
  makeThumbnailUrl,
  type OpenProcessingCurationResponse,
} from "../api/OpenProcessing";

interface Props {
  sketches: OpenProcessingCurationResponse;
  libraries: CollectionEntry<"libraries">[];
  pastEvents: CollectionEntry<"past-events">[];
}

// Max number of sketches we will show on this page
const sketchLimit = 8;
// Max number of libraries we will show on this page
const librariesLimit = 8;
// Max number of libraries we will show on this page
const eventsLimit = 9;

const { sketches, libraries, pastEvents } = Astro.props;
const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await useTranslations(currentLocale);
---

<BaseLayout title="Community">
  <section class="mt-md mb-xl">
    <h2 class="mb-lg">{t("Sketches")}</h2>
    <ul class="grid grid-cols-2 gap-y-xl gap-x-md md:grid-cols-4">
      {
        sketches.slice(0, sketchLimit).map((sk, i) => (
          <li
            class={(() => {
              if (i === 0)
                return "col-span-2 row-span-2 md:col-span-3 md:row-span-3";
              if (i === 1) return "md:row-span-3";
              if (i === 2) return "col-span-2 row-span-2";
              if (i === librariesLimit - 1) return "row-span-2 col-span-2";
              else return "md:row-span-2";
            })()}
          >
            <a href={`/sketches/${sk.visualID}`}>
              {
                // This isn't alt text ideal but we have no way of knowing what
                // the thumbnail looks like, and the OpenProcessing API
                // doesn't include that information
              }
              <Image
                src={makeThumbnailUrl(sk.visualID)}
                alt="Screenshot of sketch"
                width={400}
                height={400}
                class="w-full h-auto"
              />
              <div class="text-lg mt-xs">{sk.title}</div>
              <div class="text-sm">{sk.fullname}</div>
            </a>
          </li>
        ))
      }
    </ul>
    <LinkButton url="/sketches" variant="link" class="mt-lg"
      >{t("All Sketches")}</LinkButton
    >
  </section>
  <hr />
  <section class="mt-md mb-xl">
    <h2 class="mb-lg">{t("Libraries")}</h2>
    <ul class="grid grid-cols-2 gap-y-xl gap-x-md md:grid-cols-4">
      {
        libraries.slice(0, librariesLimit).map((entry) => (
          <li>
            <a href={getLibraryLink(entry)}>
              <Image
                src={entry.data.featuredImage}
                alt={entry.data.featuredImageAlt}
              />

              <div class="text-lg mt-xs">{entry.data.name}</div>
              <div class="text-sm">{entry.data.description}</div>
            </a>
          </li>
        ))
      }
    </ul>
    <LinkButton url="/libraries" variant="link" class="mt-lg"
      >{t("All Libraries")}</LinkButton
    >
  </section>
  <hr />
  <section class="mt-md mb-xl">
    <h2 class="mb-lg">{t("Events")}</h2>
    <ul class="grid grid-cols-2 gap-y-xl gap-x-md md:grid-cols-4">
      {
        pastEvents.slice(0, eventsLimit).map((entry, i) => (
          <li
            class={(() => {
              if (i === 0 || i === 5) return "col-span-2 row-span-2";
              if (i > 0 && i < 5) return "md:row-span-2";
              if (i === 8)
                return "col-span-2 row-span-2 md:row-span-1 md:col-span-1";
            })()}
          >
            <a href={`/past-events/${removeLocaleAndExtension(entry.id)}`}>
              <Image
                src={entry.data.featuredImage}
                alt={entry.data.featuredImageAlt}
              />
              <div class="text-lg mt-xs">{entry.data.title}</div>
              <div class="text-sm">
                {new Date(entry.data.date).toLocaleDateString(currentLocale)}
              </div>
            </a>
          </li>
        ))
      }
    </ul>
    <LinkButton url="/past-events" variant="link" class="mt-lg"
      >{t("All Events")}</LinkButton
    >
  </section>
</BaseLayout>
