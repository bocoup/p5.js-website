---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import {
  getCollectionInDefaultLocale,
  makeReferencePageSlug,
  removeDefaultLocalePrefix,
} from "../_utils";

export async function getStaticPaths() {
  const referenceEntries = await getCollectionInDefaultLocale("reference");

  return referenceEntries.map((entry) => ({
    params: {
      id: makeReferencePageSlug(removeDefaultLocalePrefix(entry.id)),
    },
    props: {
      entry,
    },
  }));
}

const { id } = Astro.params;
const referenceEntries = await getCollectionInDefaultLocale("reference");

// TODO: Find correct way to handle Zod -> TS type inference
const entriesById: Record<string, any> = referenceEntries.reduce<
  Record<string, any>
>((acc, entry) => {
  const id = entry.id.replace(/\.mdx$/, "").replace(/^en/, "");
  acc[id] = entry;
  return acc;
}, {});

const refEntry = entriesById[id];
---

<BaseLayout title={refEntry.data.title}>
  <div set:html={refEntry.data.description} />
</BaseLayout>
../_utils
